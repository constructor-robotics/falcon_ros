#!/usr/bin/env python

import rospy
import numpy as np
from geometry_msgs.msg import PoseStamped, WrenchStamped
from sensor_msgs.msg import Joy

class Control:
    '''
    Simple proportional control example

    The Cartesian setpoint can be updated through the center button of the grip.
    '''
    def __init__(self):
        self.gain = rospy.get_param('~gain', 100.0)

        self.setpoint_cp = None

        self.servo_cf_msg = WrenchStamped()
        self.servo_cf_msg.header.frame_id = 'falcon_grip'
        # commanded Wrench for low-level servo
        self.pub = rospy.Publisher('falcon/servo_cf', WrenchStamped, queue_size=1)

        self.position = None
        self.measured_cp_sub = rospy.Subscriber('falcon/measured_cp', PoseStamped, self.measured_cp)

        self.joy_sub = rospy.Subscriber('falcon/joy', Joy, self.joy_callback)

    def spin(self):
        r= rospy.Rate(500)

        while not rospy.is_shutdown() and self.position is None:
            r.sleep()
        while not rospy.is_shutdown():
            self.servo_cf()
            r.sleep()

    def servo_cf(self):
        if self.setpoint_cp is None:
            # publish zero force if no setpoint is defined
            self.pub.publish(self.servo_cf_msg)
            return

        force = self.gain * (self.setpoint_cp - self.position)
        self.servo_cf_msg.wrench.force.x = force[0]
        self.servo_cf_msg.wrench.force.y = force[1]
        self.servo_cf_msg.wrench.force.z = force[2]
        self.pub.publish(self.servo_cf_msg)

    def measured_cp(self, msg):
        p = msg.pose.position
        self.position = np.array([p.x, p.y, p.z])

        # set initial setpoint from first measurement if unset
        if self.setpoint_cp is None:
            self.setpoint_cp = self.position[:]

    def joy_callback(self, msg):
        assert len(msg.buttons) == 4, "Expected standard 4 grip buttons"

        if self.position is None:
            return

        # center button updates setpoint
        CENTER_BUTTON = 2
        if msg.buttons[CENTER_BUTTON]:
            self.setpoint_cp = self.position[:]


if __name__ == '__main__':
    rospy.init_node('example_p_control')
    Control().spin()
